/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import BaseDeDatos.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import logica.clases.Cliente;
import logica.clases.Direccion;
import logica.clases.Localidad;
import logica.clases.Pago;
import logica.clases.Paquete;
import logica.clases.Seccion;
import logica.clases.Tarifa;
import logica.dataTypes.TipoEstado;
import logica.fabrica.Fabrica;
import logica.interfaces.IEnvio;

/**
 *
 * @author leo
 */
public class IngresarDatosDePrueba extends javax.swing.JFrame {

    private Random random = new Random();

    public IngresarDatosDePrueba() {
        initComponents();
    }
    private final IEnvio iE = Fabrica.getInstancia().getControladorEnvio();

    ;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCrearEnvioConDatos = new javax.swing.JButton();
        jButtonGenerarSeccion = new javax.swing.JButton();
        jButtonGenerarCliente = new javax.swing.JButton();
        jButtonGenerarTarifaEspecial = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonCrearEnvioConDatos.setText("Crear envio con datos autogenerados");
        jButtonCrearEnvioConDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearEnvioConDatosActionPerformed(evt);
            }
        });

        jButtonGenerarSeccion.setText("Generar seccion");
        jButtonGenerarSeccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarSeccionActionPerformed(evt);
            }
        });

        jButtonGenerarCliente.setText("Generar cliente");
        jButtonGenerarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarClienteActionPerformed(evt);
            }
        });

        jButtonGenerarTarifaEspecial.setText("Generar Tarifa Especial");
        jButtonGenerarTarifaEspecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarTarifaEspecialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonGenerarSeccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCrearEnvioConDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonGenerarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonGenerarTarifaEspecial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jButtonCrearEnvioConDatos)
                .addGap(18, 18, 18)
                .addComponent(jButtonGenerarSeccion)
                .addGap(18, 18, 18)
                .addComponent(jButtonGenerarCliente)
                .addGap(18, 18, 18)
                .addComponent(jButtonGenerarTarifaEspecial)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCrearEnvioConDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearEnvioConDatosActionPerformed
        //creacion de secciones
        this.jButtonGenerarSeccionActionPerformed(evt);
        for (int i = 0; i < 5; i++) {
            int idPrimerEnvio;
            int idSegundoEnvio;
            //creacion de clientes
            Cliente cliente = new Cliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), String.valueOf(this.GenerarTelefono()));
            Fabrica.getInstancia().getControladorCliente().agregarCliente(cliente.getCedula(), cliente.getNombre(), cliente.getApellido(), Integer.parseInt(cliente.getTelefono()));
            Cliente segundoCliente = new Cliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), String.valueOf(this.GenerarTelefono()));
            Fabrica.getInstancia().getControladorCliente().agregarCliente(segundoCliente.getCedula(), segundoCliente.getNombre(), segundoCliente.getApellido(), Integer.parseInt(segundoCliente.getTelefono()));
            //creación de direcciones
            Direccion direccionO = new Direccion(this.GenerarCalle(), this.GenerarCalle(), this.GenerarApartamento(), this.GenerarNumeroPuerta(), 0, this.GenerarNombreLocalidad(), 0);
            Direccion direccionD = new Direccion(this.GenerarCalle(), this.GenerarCalle(), this.GenerarApartamento(), this.GenerarNumeroPuerta(), 0, this.GenerarNombreLocalidad(), 0);
            direccionO.setIdDireccion(Fabrica.getInstancia().getControladorEnvio().crearDireccion(direccionO.getCalle(), direccionO.getSegunda_calle(), direccionO.getNro_puerta(), direccionO.getDatos_adicionales()));
            direccionD.setIdDireccion(Fabrica.getInstancia().getControladorEnvio().crearDireccion(direccionD.getCalle(), direccionD.getSegunda_calle(), direccionD.getNro_puerta(), direccionD.getDatos_adicionales()));
            ArrayList<Localidad> localidades = Fabrica.getInstancia().getControladorLocalidad().obtenerLasLocalidades();
            int idRandomLocalidad = this.random.nextInt(localidades.size() - 1);
            Fabrica.getInstancia().getControladorEnvio().conexionLocalidad_Direccion(localidades.get(idRandomLocalidad).getIdLocalidad(), direccionO.getIdDireccion());
            Fabrica.getInstancia().getControladorEnvio().conexionLocalidad_Direccion(localidades.get(idRandomLocalidad).getIdLocalidad(), direccionD.getIdDireccion());
            //creación de paquete
            ArrayList<Seccion> secciones = Fabrica.getInstancia().getControladorSeccion().obtenerLasSecciones();
            int idRandomSeccion = this.random.nextInt(secciones.size() - 1);
            Paquete paquete = new Paquete(this.GenerarDescripcionPaquete(), this.GenerarPesoPaquete(), this.GenerarBool(), this.GenerarBool(), 0, secciones.get(idRandomSeccion).getNombre());
            int esFragilInt = paquete.isEsFragil() ? 1 : 0;
            int esEspecialInt = paquete.isEsEspecial() ? 1 : 0;
            paquete.setIdPaquete(Fabrica.getInstancia().getControladorEnvio().crearPaquete(paquete.getDescripcion(), paquete.getPeso(), esFragilInt, esEspecialInt));
            Fabrica.getInstancia().getControladorEnvio().conexionSeccion_Paquete(paquete.getIdPaquete(), secciones.get(idRandomSeccion).getIdSeccion());
            //crear tarifas
            Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
            Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
            Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
            //crear Envio
            ArrayList<Tarifa> tarifas = Fabrica.getInstancia().getControladorTarifa().listarTarifas();
            int idRandomTarifa = this.random.nextInt(tarifas.size() - 1);
            idPrimerEnvio = Fabrica.getInstancia().getControladorEnvio().crearEnvio(paquete.getIdPaquete(),
                    tarifas.get(idRandomTarifa).getIdTarifa(),
                    direccionO.getIdDireccion(),
                    direccionD.getIdDireccion(),
                    Fabrica.getInstancia().getControladorPago().crearPago(tarifas.get(idRandomTarifa).getIdTarifa(), localidades.get(idRandomLocalidad).getIdLocalidad()));
            Fabrica.getInstancia().getControladorEnvio().crearEstado(idPrimerEnvio, "preparando", "Envio en preparación");
            Fabrica.getInstancia().getControladorEnvio().conexionEnvio_Cliente(idPrimerEnvio, cliente.getCedula(), "Envio");
            Fabrica.getInstancia().getControladorEnvio().conexionEnvio_Cliente(idPrimerEnvio, segundoCliente.getCedula(), "Recibe");
        }
    }//GEN-LAST:event_jButtonCrearEnvioConDatosActionPerformed

    private void jButtonGenerarSeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarSeccionActionPerformed
        Fabrica.getInstancia().getControladorSeccion().agregarUnaSeccion("Seccion " + this.GenerarNombreSeccion(), this.GenerarNombreLocalidad());
        Fabrica.getInstancia().getControladorSeccion().agregarUnaSeccion("Seccion " + this.GenerarNombreSeccion(), this.GenerarNombreLocalidad());
        Fabrica.getInstancia().getControladorSeccion().agregarUnaSeccion("Seccion " + this.GenerarNombreSeccion(), this.GenerarNombreLocalidad());
        Fabrica.getInstancia().getControladorSeccion().agregarUnaSeccion("Seccion " + this.GenerarNombreSeccion(), this.GenerarNombreLocalidad());
        Fabrica.getInstancia().getControladorSeccion().agregarUnaSeccion("Seccion " + this.GenerarNombreSeccion(), this.GenerarNombreLocalidad());
        JOptionPane.showMessageDialog(null, "Seccion generada exitosamente", "Generación exitosa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonGenerarSeccionActionPerformed

    private void jButtonGenerarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarClienteActionPerformed
        Fabrica.getInstancia().getControladorCliente().agregarCliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), this.GenerarTelefono());
        Fabrica.getInstancia().getControladorCliente().agregarCliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), this.GenerarTelefono());
        Fabrica.getInstancia().getControladorCliente().agregarCliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), this.GenerarTelefono());
        Fabrica.getInstancia().getControladorCliente().agregarCliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), this.GenerarTelefono());
        Fabrica.getInstancia().getControladorCliente().agregarCliente(this.GenerarCI(), this.GenerarNombre(), this.GenerarApellido(), this.GenerarTelefono());
        JOptionPane.showMessageDialog(null, "Cliente generado exitosamente", "Generación exitosa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonGenerarClienteActionPerformed

    private void jButtonGenerarTarifaEspecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarTarifaEspecialActionPerformed
        Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
        Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
        Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
        Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
        Fabrica.getInstancia().getControladorTarifa().crearUnaTarifa(this.GenerarNombreTarifaEspecial(), this.GenerarPrecioTarifaEspecial());
        JOptionPane.showMessageDialog(null, "Tarifa generada exitosamente", "Generación exitosa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonGenerarTarifaEspecialActionPerformed

    //Datos CLiente
    public String GenerarNombre() {
        String[] nombres = {"Juan", "María", "Pedro", "Ana", "Luis", "Sofía", "Carlos", "Laura", "Miguel", "Elena"};
        String nombreAleatorio = nombres[this.random.nextInt(nombres.length)];
        return nombreAleatorio;
    }

    public String GenerarApellido() {
        String[] apellidos = {
            "García",
            "Martínez",
            "López",
            "Rodríguez",
            "Fernández",
            "Pérez",
            "González",
            "Sánchez",
            "Ramírez",
            "Torres"
        };
        String apellidoAleatorio = apellidos[this.random.nextInt(apellidos.length)];
        return apellidoAleatorio;
    }

    public int GenerarCI() {
        int CIAleatorio = this.random.nextInt(90000000) + 10000000;
        return CIAleatorio;
    }

    public int GenerarTelefono() {
        int telefonoAleatorio = this.random.nextInt(900000000) + 100000000;
        return telefonoAleatorio;
    }

    //Tarifas Especiales
    public String GenerarNombreTarifaEspecial() {
        String[] nombres = {"Electrodomestico", "Bicicleta", "Televisor", "Microondas", "Mueble"};
        String[] tamanios = {"Chico/a", "Mediano/a", "Grande"};
        String nombreTarifaAleatorio = nombres[this.random.nextInt(nombres.length)];
        String tamanioTarifaAleatorio = tamanios[this.random.nextInt(tamanios.length)];

        return nombreTarifaAleatorio + " " + tamanioTarifaAleatorio;
    }

    public int GenerarPrecioTarifaEspecial() {
        int PrecioTarifa = this.random.nextInt(900) + 100;
        return PrecioTarifa;
    }

    //Direcciones
    public String GenerarCalle() {
        String[] calles = {
            "Felipone",
            "Solano Garcia",
            "18 de Julio",
            "Leandro Gomez",
            "Bulevar artigas",
            "Lucas Piriz",
            "Av Salto",
            "Juncal",
            "Cerrito",
            "Charruas"
        };
        String calleAleatoria = calles[this.random.nextInt(calles.length)];
        return calleAleatoria;
    }

    public int GenerarNumeroPuerta() {
        int numeroCalle = this.random.nextInt(9000) + 100;
        return numeroCalle;
    }

    public String GenerarApartamento() {
        String[] apartamentos = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j"};
        String apartamentoAleatorio = apartamentos[this.random.nextInt(apartamentos.length)];
        int numeroapartamento = this.random.nextInt(9) + 1;
        return apartamentoAleatorio + numeroapartamento;
    }

    //Paquetes
    public String GenerarDescripcionPaquete() {
        String[] objetos = {
            "mueble",
            "electrodoméstico",
            "Televisor",
            "ropa",
            "herramientas",
            "computadora",
            "material de construcción",
            "juguete",
            "producto alimenticio",
            "instrumento musical",
            "equipamiento deportivo",
            "planta",
            "microondas",
            "libros",
            "equipo médico"
        };
        String paqueteAleatorio = objetos[this.random.nextInt(objetos.length)];
        return paqueteAleatorio;
    }

    public float GenerarPesoPaquete() {
        float Peso = this.random.nextFloat(90) + 1;
        return Peso;
    }

    public Boolean GenerarBool() {
        Boolean bool = this.random.nextBoolean();
        return bool;
    }

    //Seccion
    public String GenerarNombreLocalidad() {
        String[] nombres = {
            "Barrio Norte",
            "Porvenir",
            "Constancia",
            "Esperanza",
            "Barrio Oeste",
            "Barrio Centro",
            "Barrio Este (Hasta Golf Club)",
            "Nuevo Paysandú",
            "Barrio Sur (Hasta San Félix)"
        };
        String nombreLocalidadAleatorio = nombres[this.random.nextInt(nombres.length)];
        return nombreLocalidadAleatorio;
    }
    
    public String GenerarNombreSeccion() {
        String[] nombres = {
            "BN",
            "P",
            "C",
            "E",
            "BO",
            "BC",
            "BE",
            "NP",
            "BS"
        };
        String nombreSeccionAleatorio = nombres[this.random.nextInt(nombres.length)];
        return nombreSeccionAleatorio;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngresarDatosDePrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngresarDatosDePrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngresarDatosDePrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngresarDatosDePrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngresarDatosDePrueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCrearEnvioConDatos;
    private javax.swing.JButton jButtonGenerarCliente;
    private javax.swing.JButton jButtonGenerarSeccion;
    private javax.swing.JButton jButtonGenerarTarifaEspecial;
    // End of variables declaration//GEN-END:variables
}
